<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven/>
		
	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="jdbc.properties" />
	</beans:bean>
	
	<context:annotation-config />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:annotation-config />
	<context:component-scan base-package="com.roman.*" />
	<aop:aspectj-autoproxy />
	
	<!-- <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/test" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="qwerty" />
	</beans:bean> -->

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		<beans:property name="packagesToScan" value="com.roman.model.*"></beans:property>
		
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>resources/hibernate.hbm.xml</beans:value>
				<!-- <beans:value>com.roman.model.Person</beans:value> -->
			</beans:list>
			
		</beans:property>
		
			
		<beans:property name="hibernateProperties">
			<beans:props>
			    <beans:prop key="hibernate.connection.driver_class">${database.driver}</beans:prop>
			    <beans:prop key="hibernate.connection.url">${database.url}</beans:prop>
			    <beans:prop key="hibernate.connection.password">${database.password}</beans:prop>
			    <beans:prop key="hibernate.connection.username">${database.user}</beans:prop>
			    
				<beans:prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">
					true
				</beans:prop>
				<beans:prop key="hbm2ddl.auto">
					update
				</beans:prop>
				
				<!-- C3P0 properties (hibernate.c3p0.idle_test_period) org.hibernate.connection.C3P0ConnectionProvider  -->
				<beans:prop key="hibernate.connection.provider_class">  
				    org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
				</beans:prop>
				<beans:prop key="hibernate.c3p0.min_size">
				    5
				</beans:prop>
				<beans:prop key="hibernate.c3p0.acquire_increment">
				    1
				</beans:prop>
				<beans:prop key="hibernate.c3p0.max_size">
				    20
				</beans:prop>
				<beans:prop key="hibernate.c3p0.timeout">
				    30
				</beans:prop>
				<beans:prop key="hibernate.c3p0.max_statements">
				    50
				</beans:prop>
				<beans:prop key="hibernate.c3p0.idle_test_period">
				    3000
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
 
 	<!-- Тут мы описываем бины -->
	<beans:bean id="personDAO" class="com.roman.dao.PersonDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="coordinatesDAO" class="com.roman.dao.CoordinatesDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="personService"
		class="com.roman.service.PersonServiceImpl">
		<beans:property name="personDAO" ref="personDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="coordinatesService"
		class="com.roman.service.CoordinatesServiceImpl">
		<beans:property name="coordinatesDAO" ref="coordinatesDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="engine"
		class="com.roman.engine.Engine">
		<beans:property name="coordinatesService" ref="coordinatesService"></beans:property>
	</beans:bean>
	
	
	<!-- Rest options  -->
	<!-- <context:component-scan base-package="com.journaldev.rest.controller" /> -->
	<!-- <annotation-driven /> -->
	<!-- End of Rest options -->
	
	<!-- switches on the transactional behavior -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>


</beans:beans>
